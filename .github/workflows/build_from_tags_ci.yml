name: Flutter CI

on:
  push:
#    tags:
#      - "v*.*.*"

jobs:
  build:
    name: Build APK & AppBundle
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      - uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - run: flutter pub get
      - run: flutter format --set-exit-if-changed .
      - run: flutter analyze .
      - run: flutter build apk
      - uses: actions/upload-artifact@v1
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
      - uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          bodyFile: "release_body.md"
          token: ${{ secrets.TOKEN_TEST2 }}





#name: BuildFromTagsCI
#
#on:
#  push:
#    tags:
#      - "v*.*.*" # on every version tag will build a new android artifact.
#jobs:
#  build:
#    name: Build APK & AppBundle
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#      - name: Setup Java
#        uses: actions/setup-java@v2
#        with:
#          java-version: "12.x"
#      - name: Setup Flutter
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: "3.0.5"
#
##      - name: Setup Java
##        run: |
##          echo "${{ secrets.RELEASE_KEYSTORE }}" > upload-keystore.jks.asc
##          gpd -d --passphrase echo "${{ secrets.RELEASE_KEYSTORE_SECRET }}" --batch upload-keystore.jks.asc > upload-keystore.jks
#
#      - name: Pub Get Packages
#        run: flutter pub get
#
#      - name: Build APK
#        run: flutter build apk --verbose
#
#      - name: Build APPBUNDLE
#        run: flutter build appbundle --release
#
#      - name: Create Github Release
#        uses: ncipollo/release-action@v1
#        with:
#          artifacts: "build/app/outputs/apk/release/*.apk,build/app/outputs/bundle/release/*.aab"
#          token: ${{ secrets.RELEASES_TOKEN }}